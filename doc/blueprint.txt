/********************************
     Collider blueprint
     by Dylan James Kolb-Bond
     December 2014
     These are the plans for the Collider chess program
*********************************/

1.) Board Representation
- Board will be represented using a 10x12 array.
  This is used to allow null squares that will make it easier to check if 
  a move is invalid. 64 square original board will start on square 21.
- A macro to switch between 64 squares and 120 squares will need to be created.
*	The two boards will be used to check for offboard moves.
	This will be done by taking the square number from the 120 square board
        (which is shown below this page) and checking it against the 64 square 
	board which is used for indexing. For example, if we take the square 14 (g2)
	and check it against the 64 square index, this returns 37 which is the index
	of the 120 square board. Now if this moves 2 squares to the right the
	computer takes the original square 14 plus 2 and checks the index for 16,
	which is 39, this index returns a -1 so this is invalid.
- Create a bitboard for pawns. (Eventually create bitboards for all pieces)
- Create defs.h file to store all definitions for program.
  this will contain all functions externally and will be included in each
  other file. This will also need a section for any global variables, any macros  all functions for other files split into their own sections. This file will 
  contain the structures for the board and also a board used to undo. All piece
  constants containing values and numbers. The pieces values will be decided
  by an enumerated list for the pieces, the ranks, and the files. The board 
  squares will also be held in an enumerated list and will start with A1=21, to
  B1=31 and so own. This will allow easier conversion between 64 and 120 square.- Create a function to Parse through a FEN string and assign it to the board
  array.
- A reset board function is going to be created.
- Will need init.cpp defs.h board.cpp bitboard.cpp colliderscope.cpp
  hashkeys.cpp data.cpp and a Makefile.	
/*	120 square board		*/

     -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
     -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 
     -1 56 57 58 59 60 61 62 63 -1  
     -1 48 49 50 51 52 53 54 55 -1 
     -1 40 41 42 43 44 45 46 47 -1 
     -1 32 33 34 35 36 37 38 39 -1 
     -1 24 25 26 27 28 29 30 31 -1 
     -1 16 17 18 19 20 21 22 23 -1 
     -1 08 09 10 11 12 13 14 15	-1 
     -1 00 01 02 03 04 05 06 07 -1 
     -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 
     -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 
/*	64 square index	*/
	
	91 92 93 94 95 96 97 98
	81 82 83 84 85 86 87 88
	71 72 73 74 75 76 77 78
	61 62 63 64 65 66 67 68
	51 52 53 54 55 56 57 58
	41 42 43 44 45 46 47 48
	31 32 33 34 35 36 37 38 
	21 22 23 24 25 26 27 28

/*	Piece constants		*/

	wqR =  1, wqN =  2, wqB =  3, wQ  =  4, wK  =  5, wkB =  6, wkN =  7, wkR =  8,
	wPa =  9, wPb = 10, wPc = 11, wPd = 12, wPe = 13, wPf = 14, wPg = 15, wPh = 16,
	bqR = 17, bqN = 18, bqB = 19, bQ  = 20, bK  = 21, bkB = 22, bkN = 23, bkR = 24,
	bPa = 25, bPb = 26, bPc = 27, bPd = 28, bPe = 29, bPf = 30, bPg = 31, bPh = 32
 
	 
2.) Search
3.) Evaluation
4.) UCI Protocol
